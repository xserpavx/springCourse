package com.example.demo.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import org.hibernate.annotations.Where;

import javax.persistence.*;
import java.util.Date;
import java.util.List;

/**
 * Created on 16.08.2021
 *
 * @author roland
 **/
@Entity
@Table(name = "book_review")
@ApiModel(description = "entity representing a review of book")
@Data
public class BookReview {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by db automatically")
    private int id;

    @Column(name="id_book")
    @ApiModelProperty("foreign key on table books")
    private int idBook;

    @Column(name="id_user")
    @ApiModelProperty("foreign key on table users")
    private int idUser;

    @ApiModelProperty("time of creation book review")
    private Date time;

    @Column(columnDefinition="TEXT")
    private String text;

    @ManyToOne
    @JoinColumn(name = "id_book", referencedColumnName = "id", insertable = false, updatable = false)
    @JsonIgnore
    private Book reviewedBook;

    @ManyToOne
    @JoinColumn(name = "id_user", referencedColumnName = "id", insertable = false, updatable = false)
    @JsonIgnore
    private User reviewedUser;

    @OneToMany
    @JoinTable(
            name = "book_review_like",
            joinColumns = @JoinColumn(name = "id_review"),
            inverseJoinColumns = @JoinColumn(name = "id"))
    @Where(clause = "value = 1")
    List<BookReviewLike> likeBookReviews;

    @OneToMany
    @JoinTable(
            name = "book_review_like",
            joinColumns = @JoinColumn(name = "id_review"),
            inverseJoinColumns = @JoinColumn(name = "id"))
    @Where(clause = "value = -1")
    List<BookReviewLike> dislikeBookReviews;

//    @ManyToOne
//    @JoinColumn(name = "id_user", referencedColumnName = "id", insertable = false, updatable = false)
//    @JsonIgnore
//    private User reviewedUser;

}
